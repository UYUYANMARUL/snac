{"noir_version":"1.0.0-beta.3+ceaa1986628197bd1170147f6a07f0f98d21030a","hash":10106935870466341806,"abi":{"parameters":[{"name":"x","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"}],"return_type":null,"error_types":{}},"bytecode":"H4sIAAAAAAAA/7VTWw7CIBAUWqO28cuL7PJolz+vYiO9/xFs0yXZEOyH0kk2A9nNZBhAnTbopc68Vks1zCuuS7ViLkeaezJbGJyLo4lo8QUmTOTB+WkgJPTk34asjeRoDFMYIaCzEWcf7AwbpBb8AwQs2K2lDbqQgc4D1BygRHNgYL9qxXkFoKroSx90kbUfnKrlk7XazOce5CdbcWPuRL+p588k/f4YfbgUztiJdZ/10idqT9+zyfc6471ZtaN7L/SS5oNZ+k3n+ABViRinNQUAAA==","debug_symbols":"lY/LCsMgEEX/ZdZuEksp/kopwccYBkTFR6FI/r0mJJCty3PvmQvTwKCq60Lehgzi3cAFLQsF36nBdEQ5Sr9TLjIVEPOLAXoDgvONgSWHIJ7T9mEwj+l8TH+M6B1UIudoXe4f9fgrE0nl8ERbvb615Rev5rqPKWg0NeG+dHR9/g8=","file_map":{"61":{"source":"fn main(x: u8) {\n    assert(x > 1);\n}\n\n// [4, 107, 18, 244, 87, 255, 137, 224, 227, 96, 186, 155, 155, 74, 92, 85, 225, 206, 139, 80, 234, 147, 250, 145, 194, 208, 245, 63, 94, 214, 72, 197, 111,\n//\\\" 22, 119, 227, 50, 139, 173, 197, 128, 65, 117, 157, 241, 18, 250, 64, 210, 227, 140, 194, 71, 138, 52, 190, 11, 88, 230, 173, 15, 23, 153, 192, 169]\n\n#[test]\nfn test_main() {\n\nlet public_key_x: [u8; 32] = [\n    99, 27, 151, 79, 254, 164, 41, 141,\n    149, 189, 209, 200, 85, 186, 208, 62,\n    115, 21, 196, 55, 202, 114, 175, 65,\n    15, 149, 227, 206, 209, 201, 56, 223\n];\n\nlet public_key_y: [u8; 32] = [\n    86, 252, 103, 95, 152, 106, 98, 235,\n    62, 154, 231, 252, 118, 76, 102, 67,\n    89, 247, 26, 194, 208, 72, 79, 70,\n    228, 20, 30, 177, 190, 197, 237, 12\n];\n    let message_hash: [u8; 32] = [159, 134, 208, 129, 136, 76, 125, 101, 154, 47, 234, 160, 197, 90, 208, 21, 163, 191, 79, 27, 43, 11, 130, 44, 209, 93, 108, 21, 176, 240, \n10, 8];\n\n    // 3. ECDSA signature over secp256k1\n    let signature: [u8; 64] = [13, 193, 56, 29, 20, 157, 16, 121, 64, 167, 144, 22, 39, 127, 78, 92, 38, 245, 206, 117, 111, 51, 224, 70, 148, 202, 1, 24, 72, 120, 43, 90\n, 23, 247, 114, 59, 173, 108, 201, 252, 253, 154, 203, 65, 105, 158, 181, 234, 59, 53, 207, 40, 53, 9, 28, 187, 163, 161, 97, 121, 68, 217, \n217, 167];\n\n    // 4. Verify\n    let is_valid = std::ecdsa_secp256k1::verify_signature(\n        public_key_x,\n        public_key_y,\n        signature,\n        message_hash\n    );\n\n    assert(is_valid);  // should pass\n}\n\n","path":"/Users/ataberkcekic/main-code/projects/snac/snac_circuits/snac_create_deposit_address/src/main.nr"}},"names":["main"],"brillig_names":["directive_integer_quotient"]}